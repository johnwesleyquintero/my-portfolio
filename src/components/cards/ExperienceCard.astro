---
interface Job {
  title: string;
  company: string;
  type: string;
  employment: {
    startDate: string;
    endDate: string;
    duration: string;
    status: string;
  };
  location: string;
  responsibilities?: string[];
  skills?: string[];
  keywords?: string[];
  description?: string;
  achievements?: string[];
}

interface Props {
  job: Job;
}

const { job } = Astro.props as Props;
---

<article class="bg-white shadow-md rounded-lg p-6">
  <header>
    <h3 class="text-xl font-semibold">{job.title}</h3>
    <p class="text-gray-600 mb-2">{job.company} â€¢ {job.type}</p>
    <p class="text-gray-500 mb-4">{job.employment.startDate} - {job.employment.endDate} ({job.employment.duration})</p>
  </header>

  {job.description && <p class="mb-4">{job.description}</p>}

  {job.responsibilities && (
    <section class="mb-4">
      <h4 class="font-medium mb-2">Responsibilities:</h4>
      <ul class="list-disc list-inside space-y-1">
        {job.responsibilities?.map((item: string) => (
          <li class="text-gray-600">{item}</li>
        ))}
      </ul>
    </section>
  )}

  {job.achievements && (
    <section class="mb-4">
      <h4 class="font-medium mb-2">Achievements:</h4>
      <ul class="list-disc list-inside space-y-1">
        {job.achievements?.map((item: string) => (
          <li class="text-gray-600">{item}</li>
        ))}
      </ul>
    </section>
  )}
</article>